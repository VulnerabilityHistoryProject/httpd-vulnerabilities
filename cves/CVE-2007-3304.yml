CVE: CVE-2007-3304
CWE_instructions: |
  Please go to cwe.mitre.org and find the most specific, appropriate CWE entry
  that describes your vulnerability. (Tip: this may not be a good one to start
  with - spend time understanding this vulnerability before making your choice!)
CWE:
CVSS: AV:L/AC:M/Au:N/C:N/I:N/A:C
curated_instructions: |
  If you are manually editing this file, then you are "curating" it. Set the
  entry below to "true" as soon as you start. This will enable additional
  integrity checks on this file to make sure you fill everything out properly.
  If you are a student, we cannot accept your work as finished unless curated is
  set to true.
curated: false
announced_instructions: |
  Was there a date that this vulnerability was announced to the world? You can
  find this in changelogs, blogs, bug reports, or perhaps the CVE date. A good
  source for this is Chrome's Stable Release Channel
  (https://chromereleases.googleblog.com/).
  Please enter your date in YYYY-MM-DD format.
announced: 2007-06-20T22:30Z
description_instructions: |
  You can get an initial description from the CVE entry on cve.mitre.org. These
  descriptions are a fine start, but they can be kind of jargony.

  Rewrite this description in your own words. Make it interesting and easy to
  read to anyone with some programming experience. We can always pull up the NVD
  description later to get more technical.

  Try to still be specific in your description, but remove Chromium-specific
  stuff. Remove references to versions, specific filenames, and other jargon
  that outsiders to Chromium would not understand. Technology like "regular
  expressions" is fine, and security phrases like "invalid write" are fine to
  keep too.
description:
bounty_instructions: |
  If you came across any indications that a bounty was paid out for this
  vulnerability, fill it out here. Or correct it if the information already here
  was wrong. Otherwise, leave it blank.
bounty:
  amt:
  announced:
  url:
reviews: []
bugs: []
repo:
fixes_vcc_instructions: |
  Please put the commit hash in "commit" below (see my example in
  CVE-2011-3092.yml). Fixes and VCCs follow the same format.
fixes:
- commit: 4488af57bf1e9aa0a588b229b052445ff921e1f1
  note:
- commit: 47b08d484c1b906f2e03e8bc9ae8d70badcfa782
  note:
vccs:
- commit: 9d359afbed88ae26bbac25fbacb579a882bccc5b
  note:
- commit: 5430f8800f5fffd57e7421dee0ac9de8ca4f9573
  note:
- :commit: 2a42b05f849de107517a18863edc98cd54cb36f8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 50df82ec3503b8ff1a5ed6f2dfd682e24d4586e5
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 953a2063c7b51c00c4a0062e18a025b4338d3e1b
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 72ad541beb16444b3146ddf62807c13fe0ebb6d9
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 46a436b942d7a241f9a49830366b6ca39e70db19
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: fff4c7ff155a2b23917d1e39a1cdd5a5c7a2bb79
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d88b3a8032ce23fbe1b160145078233103cbf7e2
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8904f26467635f49feda66703922d384f844620a
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: e7f55489b58546a88cf0083f1fa029cb58a94c77
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 565fcfa1d6d52201a52ebdb61d2df1e88966a15e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 45fdba1678acedf53e47177cfc9fbb598c30e646
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 38055df952a30065a871f4428e3b76f6d17233af
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 0e90fae5990c5f90e7c2a10ae2539af5f8de1f2d
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 485e1cccabec51a1892069314c55ff92bcbd6c10
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: b8b177e06a18a7c4119dc56de54f96a7d8b83876
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3b444a25e310861a0e4265c0bd3450d4c43fd012
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: f48624a72d87b6fdf06d3953337f4aa142b809ef
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 0cfe95c9d8ac0e143cab455bd95680a4d2a90808
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 6dcc0ffa517d660e9f52fc12a99bfae53cb23cd2
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: aca97e0853fc7282a121110c5e2144d52cce0c57
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 23d8ef446582e9809f0f25f9f1ca1a4aeea94453
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 1af8e063491926512386f260c15d02cbd39a9a38
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8ce1d422aa46ea2031e18a5a63f83435c9257500
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 7956a1cad3a76f19450bd35206cebffd819fc88f
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 98116826f0aa3742774d381cdefa4e74ae7b0ac5
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: c69524dae96809efb60ee853371bdb7cf704e1d9
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5ea7da317bd39314077fcb45a49e7674dde1144c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3b131486167a57c14f454b8c6d8accde92982869
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5fcf870cc1fd50b642ef80ecb75aef447e963244
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 9cdef1e64457e2b7d4d3dc26c0a03d542ec55d38
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 806562c4ab0dae212acdd26647cda9c8f995f8b2
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: a599b79032e40b204dfc11065348eb2380e50b40
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d8f3229c741ac1fefcba64e068398533687195e8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: f93a11a445664100c8b601cfcfafa7e50f8dbee8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8592ce4322a1cef78fab73e1f7cc89bdc0d5244b
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d23b8ff6edb6c1b02377de68845574c696734c7d
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 882d1bfdac8594cafa1eba5f29fc935be5260c32
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8a467a80e7edbd75d5ea989907ee535f75a651e6
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3a735e3905d5c182b48fe4504a1eed4c8414012f
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3afccb5343dd2b9463d68b99202fb1c17b53989c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 60614ff457226f06879e2476fb835f5d99339cd7
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: e40af9c328b48413330f8b7fae3615023458296e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4dc0df853a82d91d687d2d41f65163e1d7f282a5
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 6cf8ba4561c11c5b19db73e4fd0544afe8b4ce49
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 2a53b0482662d3baa74044964538ef00a553b6eb
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 49df4346d6dc732137611195e0c9c0d16cf2b905
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8192b3acc984b93f341b5f403e75bf37e58630f1
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4a15e3fdb818eaf4cfd2ea0cbc6b36e0647c7652
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: aa6840b108fdfc78143bf02a4504d4ab2a6c4df4
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: afc4d9f73c7ff5e226cd5b7aab0439f48223bc01
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: a83b21763cd2fbfd97bf5cbb5f01ea4d7e7ac3c3
  :note: This VCC was automatically discovered by the archeogit tool
upvotes_instructions: |
  For the first round, ignore this upvotes number.

  For the second round of reviewing, you will be giving a certain amount of
  upvotes to each vulnerability you see. Your peers will tell you how
  interesting they think this vulnerability is, and you'll add that to the
  upvotes score on your branch.
upvotes:

unit_tested:
  question: |
    Were automated unit tests involved in this vulnerability?
    Was the original code unit tested, or not unit tested? Did the fix involve
    improving the automated tests?

    For the "code" answer below, look not only at the fix but the surrounding
    code near the fix and determine if and was there were unit tests involved
    for this module.

    For the "fix" answer below, check if the fix for the vulnerability involves
    adding or improving an automated test to ensure this doesn't happen again.
  answer:
  code:
  fix:

discovered:
  question: |
    How was this vulnerability discovered?

    Go to the bug report and read the conversation to find out how this was
    originally found. Answer in longform below in "answer", fill in the date in
    YYYY-MM-DD, and then determine if the vulnerability was found by a Google
    employee (you can tell from their email address). If it's clear that the
    vulenrability was discovered by a contest, fill in the name there.

    The "automated" flag can be true, false, or nil.
    The "google" flag can be true, false, or nil.

    If there is no evidence as to how this vulnerability was found, then you may
    leave this part blank.
  answer:
  date:
  automated:
  google:
  contest:

subsystem:
  question: |
    What subsystems was the mistake in?

    Look at the path of the source code files code that were fixed to get
    directory names. Look at comments in the code. Look at the bug reports how
    the bug report was tagged.
  answer:
  name:

interesting_commits:
  question: |
    Are there any interesting commits between your VCC(s) and fix(es)?

    Write a brief (under 100 words) description of why you think this commit was
    interesting in light of the lessons learned from this vulnerability. Any
    emerging themes?
  commits:
  - commit:
    note:
  - commit:
    note:

major_events:
  question: |
    Please record any major events you found in the history of this
    vulnerability. Was the code rewritten at some point? Was a nearby subsystem
    changed? Did the team change?

    The event doesn't need to be directly related to this vulnerability, rather,
    we want to capture what the development team was dealing with at the time.
  answer:
  events:
  - name:
    date:
  - name:
    date:

lessons:
  question: |
    Are there any common lessons we have learned from class that apply to this
    vulnerability? In other words, could this vulnerability serve as an example
    of one of those lessons?

    Leave "applies" blank or put false if you did not see that lesson (you do
    not need to put a reason). Put "true" if you feel the lesson applies and put
    a quick explanation of how it applies.

    Don't feel the need to claim that ALL of these apply, but it's pretty likely
    that one or two of them apply.

    If you think of another lesson we covered in class that applies here, feel
    free to give it a small name and add one in the same format as these.
  defense_in_depth:
    applies:
    note:
  least_privilege:
    applies:
    note:
  frameworks_are_optional:
    applies:
    note:
  native_wrappers:
    applies:
    note:
  distrust_input:
    applies:
    note:
  security_by_obscurity:
    applies:
    note:
  serial_killer:
    applies:
    note:
  environment_variables:
    applies:
    note:
  secure_by_default:
    applies:
    note:
  yagni:
    applies:
    note:
  complex_inputs:
    applies:
    note:

mistakes:
  question: |
    In your opinion, after all of this research, what mistakes were made that
    led to this vulnerability? Coding mistakes? Design mistakes?
    Maintainability? Requirements? Miscommunications?

    Look at the CWE entry for this vulnerability and examine the mitigations
    they have written there. Are they doing those? Does the fix look proper?

    Use those questions to inspire your answer. Don't feel obligated to answer
    every one. Write a thoughtful entry here that those ing the software
    engineering industry would find interesting.
  answer:
